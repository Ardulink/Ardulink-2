# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  schedule:
  # each fifteen day of month
  - cron: "0 0 15 * *"
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11, 17 ]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit

    - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4.0.0

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build with Maven
      run: mvn -B -Pwith-video org.jacoco:jacoco-maven-plugin:prepare-agent compile jib:dockerBuild verify --file pom.xml

    - name: Set first matrix job environment variable
      id: set-first-job
      if: ${{ matrix.java-version == '11' }}
      run: echo "FIRST_JOB=true" >> $GITHUB_ENV

    - name: Distribute jars built
      if: ${{ env.FIRST_JOB == 'true' }}
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: jars
        path: "*/target/*.jar"

    # colons are not allowed by upload-artifact, so we have to move (better copy) the file
    # https://github.com/actions/upload-artifact/issues/546
    - name: Copy zip to /tmp
      run: |
        for file in deploy-dist/target/ardulink-V*.zip; do 
          cp "$file" "/tmp/$(basename "$file" | sed 's/-SNAPSHOT-[0-9T:.\-]\+Z\.zip$/-SNAPSHOT.zip/')"
        done
    - name: Distribute zip created
      if: ${{ env.FIRST_JOB == 'true' }}
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: ardulink-zip
        path: "/tmp/ardulink-V*.zip"

    - name: Test Report JDK ${{ matrix.java-version }}
      uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5 # v1
      if: (success() || failure()) && github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'  # run this step even if previous step failed
      with:
        name: Tests Report JDK ${{ matrix.java-version }}
        path: "*/target/surefire-reports/*.xml"
        reporter: java-junit

    - name: Distribute video records
      if: ${{ env.FIRST_JOB == 'true' }}
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: videos
        path: "*/target/videos/*"

    - name: Unzip artifact
      run: unzip deploy-dist/target/ardulink-V*.zip -d deploy-dist/target/
    - name: Cache docker images
      uses: ScribeMD/docker-cache@0.5.0
      with:
        key: docker-${{ runner.os }}-${{ matrix.java-version }}-${{ hashFiles('deploy-dist/tests/docker-compose.yml') }}
    - name: Run the systemtests
      run: |
        bash deploy-dist/tests/systemtest-mqtt.sh
        bash deploy-dist/tests/systemtest-rest.sh

    - name: Codecov
      uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1

